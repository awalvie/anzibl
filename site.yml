# main playbook

- name: Setup servers on Amazon EC2 machines
  hosts: localhost
  connection: local
  gather_facts: False

  tasks:
    - include_vars: group_vars/all/ec2_vars.yml

    - name: Amazon EC2 | Create Key Pair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        key_material: "{{ item }}"
        force: false
      with_file: ~/.ssh/id_rsa.pub

    # credits to a life saving gist, makes the provisioning process idempotent
    # https://gist.github.com/likwid/bd1c62c6adbbe6853114
    - name: Amazon EC2 | Query for existing instance
      command: aws ec2 describe-instances --region {{ region }} --filter Name=tag:Name,Values={{ hostname }} --query "Reservations[].Instances[].PublicIpAddress" --output text
      register: public_ip

    - name: Amazon EC2 | Provision Instance
      ec2:
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        zone: "{{ zone }}"
        group: "{{ group }}"
        instance_type: "{{ machine }}"
        image: "{{ image }}"
        wait: true
        vpc_subnet_id: "{{ subnet_id }}"
        assign_public_ip: yes
        exact_count: "{{ exact_count }}"
        count_tag:
            Name: "{{ hostname }}"
        instance_tags:
            Name: "{{ hostname }}"
      when: public_ip.stdout == ''

    - name: Amazon EC2 | Query for new instance
      command: aws ec2 describe-instances --region {{ region }} --filter Name=tag:Name,Values={{ hostname }} --query "Reservations[].Instances[].PublicIpAddress" --output text
      register: public_ip

    - name: Amazon ECS | Set fact for ip address
      set_fact:
        instance_public_ip : "{{ public_ip.stdout }}"

    - name: Amazon EC2 | Add new instance to host group
      add_host:
        hostname: "{{ instance_public_ip }}"
        groupname: launched

    - name: Amazon EC2 | Wait for SSH to come up
      delegate_to: "{{ instance_public_ip }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      loop: "{{ launched }}"

- name: Configure postfix
  hosts: launched
  become: True
  connection: ssh
  remote_user: ubuntu
  gather_facts: True
  var_files: "./group_vars/all/postify.yml"
  roles:
    - oefenweb.postfix
  vars:
    postfix_mynetworks:
        - '127.0.0.0/8'
        - '[::ffff:127.0.0.0]/104'
        - '[::1]/128'
        - '192.168.0.0/24'
    postfix_smtpd_relay_restrictions:
        - permit_mynetworks
        - permit_sasl_authenticated
        - reject_unauth_destination

    postfix_relayhost: smtp.gmail.com
    postfix_smtp_tls_cafile: /etc/ssl/certs/ca-certificates.crt
    postfix_relaytls: true
    postfix_sasl_user: '{{ sasl_username }}'
    postfix_sasl_password: '{{ sasl_password }}'

- name: Configure instance
  hosts: launched
  become: True
  connection: ssh
  remote_user: ubuntu
  gather_facts: True
  roles:
    - gantsign.golang
    - prometheus
    - webserver
    - blackbox_exporter
    - node_exporter
    - alertmanager